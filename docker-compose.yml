version: "3.8"

networks:
  rides-network:
    driver: bridge

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: rides-client
    ports:
      - "80:3000"
    environment:
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${GOOGLE_API_KEY}
      NEXT_PUBLIC_API_BASE_URL: http://host.docker.internal:8000
    networks:
      - rides-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: rides-server
    ports:
      - "8000:8000"
    volumes:
      - ./server:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      DB_DATABASE: ${DB_DATABASE:-rides_db}
      DB_USERNAME: ${DB_USERNAME:-rides_db_user}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_DIALECT: ${DB_DIALECT:-postgres}
      DB_HOST: ${DB_HOST:-db}
      DB_LOGGING: ${DB_LOGGING:-false}
      DB_PORT: ${DB_PORT:-5432}
      KEYCLOAK_API_URL: ${KEYCLOAK_API_URL:-http://keycloak:10000}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM:-master}
      KEYCLOAK_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - rides-network

  db:
    image: postgres:17
    container_name: rides-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME:-rides_db_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_DATABASE:-rides_db}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USERNAME:-rides_db_user} -d ${DB_DATABASE:-rides_db}",
        ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    networks:
      - rides-network

  keycloak:
    container_name: rides-keycloak
    image: quay.io/keycloak/keycloak:latest
    restart: always
    depends_on:
      - authdb
    ports:
      - "10000:10000"
    command: -v start --import-realm --hostname ${KEYCLOAK_HOSTNAME:-localhost} --http-port=10000 --http-enabled=true
    volumes:
      - ./keycloak/imports:/opt/keycloak/data/import
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_DB: ${KC_DB:-postgres}
      KC_DB_URL_HOST: ${KC_DB_URL_HOST:-authdb}
      KC_DB_URL_PORT: ${KC_DB_URL_PORT:-5432}
      KC_DB_URL_DATABASE: ${KC_DB_URL_DATABASE:-auth_rides_db}
      KC_DB_USERNAME: ${KC_DB_USERNAME:-auth_rides_db_user}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD:-password}
      KC_HEALTH_ENABLED: true
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;"]
      interval: 7s
      timeout: 12s
      retries: 20
    networks:
      - rides-network

  authdb:
    image: postgres:17
    container_name: rides-auth-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${AUTH_DB_USERNAME:-auth_rides_db_user}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD:-password}
      POSTGRES_DB: ${AUTH_DB_DATABASE:-auth_rides_db}
    ports:
      - "5433:5432"
    networks:
      - rides-network
